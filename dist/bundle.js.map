{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiB;AAClB;AACA;AACA;AACA,4EAA4E,4BAA4B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB;AACA;AACA;AACA,4FAA4F,8BAA8B;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA,yFAAyF,6BAA6B;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACsB;;;;;;;;;;;;;;;AC7FvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;;;;;;;;;;;;;;;;;ACtCc;AACqC;AACnE;AACA;AACA,wBAAwB,uCAAI;AAC5B,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAU;AACxC,kCAAkC,mDAAc;AAChD,+BAA+B,gDAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgB;;;;;;;UCpEjB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACsC;AACtC;AACA;AACA,QAAQ,+CAAK;AACb,CAAC","sources":["webpack://template-ts/./src/class/Button.ts","webpack://template-ts/./src/class/Time.ts","webpack://template-ts/./src/class/Watch.ts","webpack://template-ts/webpack/bootstrap","webpack://template-ts/webpack/runtime/define property getters","webpack://template-ts/webpack/runtime/hasOwnProperty shorthand","webpack://template-ts/webpack/runtime/make namespace object","webpack://template-ts/./src/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar Button = /** @class */ (function () {\n    function Button(watchContainer, id, clickHandler) {\n        this.element = document.createElement('button');\n        this.element.id = id;\n        this.clickHandler = clickHandler;\n        this.watchContainer = watchContainer;\n        this.element.addEventListener('click', this.handleClick.bind(this));\n        this.watchContainer.appendChild(this.element);\n    }\n    Button.prototype.handleClick = function () {\n        this.clickHandler();\n    };\n    return Button;\n}());\nexport { Button };\nvar ModeButton = /** @class */ (function (_super) {\n    __extends(ModeButton, _super);\n    function ModeButton(watchContainer, watch) {\n        var _this = _super.call(this, watchContainer, \"mode\", function () { return _this.changeMode(); }) || this;\n        _this.element.classList.add(\"button-mode\");\n        _this.watch = watch;\n        _this.mode = watch.mode;\n        return _this;\n    }\n    ModeButton.prototype.changeMode = function () {\n        this.mode = (this.mode + 1) % 3;\n        this.watch.setMode(this.mode);\n        if (this.mode = 0) {\n            this.isPressed = true;\n        }\n        else {\n            this.isPressed = false;\n        }\n    };\n    return ModeButton;\n}(Button));\nexport { ModeButton };\nvar IncreaseButton = /** @class */ (function (_super) {\n    __extends(IncreaseButton, _super);\n    function IncreaseButton(watchContainer, watch) {\n        var _this = _super.call(this, watchContainer, \"changeIncreaseButton\", function () { return _this.increaseTime(); }) || this;\n        _this.element.classList.add(\"button-increase\");\n        _this.watch = watch;\n        _this.time = watch.time;\n        _this.mode = watch.mode;\n        return _this;\n    }\n    IncreaseButton.prototype.increaseTime = function () {\n        if (this.mode === 1) {\n            this.time.increaseHours();\n        }\n        else if (this.mode === 2) {\n            this.time.increaseMinutes();\n        }\n    };\n    return IncreaseButton;\n}(Button));\nexport { IncreaseButton };\nvar LightButton = /** @class */ (function (_super) {\n    __extends(LightButton, _super);\n    function LightButton(watchContainer, watch) {\n        var _this = _super.call(this, watchContainer, \"changeColorButton\", function () { return _this.toggleLight(); }) || this;\n        _this.element.classList.add(\"button-light \");\n        _this.timeDisplay = watch.timeDisplay;\n        _this.isLightOn = watch.isLightOn;\n        return _this;\n    }\n    LightButton.prototype.toggleLight = function () {\n        this.isLightOn = !this.isLightOn;\n        if (this.isLightOn) {\n            this.timeDisplay.style.backgroundColor = 'red';\n        }\n        else {\n            this.timeDisplay.style.backgroundColor = 'white';\n        }\n    };\n    return LightButton;\n}(Button));\nexport { LightButton };\n","var Time = /** @class */ (function () {\n    function Time() {\n        this.currentTime = new Date();\n        this.lastEditedTime = null;\n    }\n    Time.prototype.tick = function () {\n        this.currentTime.setSeconds(this.currentTime.getSeconds() + 1);\n    };\n    Time.prototype.setLastEditedTime = function () {\n        this.lastEditedTime = new Date(this.currentTime.getTime());\n    };\n    Time.prototype.clearLastEditedTime = function () {\n        if (this.lastEditedTime) {\n            this.currentTime = new Date(this.lastEditedTime.getTime());\n        }\n        this.lastEditedTime = null;\n    };\n    Time.prototype.getTime = function () {\n        return this.lastEditedTime ? this.lastEditedTime : this.currentTime;\n    };\n    Time.prototype.increaseHours = function () {\n        if (this.lastEditedTime) {\n            this.lastEditedTime.setHours(this.lastEditedTime.getHours() + 1);\n        }\n        else {\n            this.currentTime.setHours(this.currentTime.getHours() + 1);\n        }\n    };\n    Time.prototype.increaseMinutes = function () {\n        if (this.lastEditedTime) {\n            this.lastEditedTime.setMinutes(this.lastEditedTime.getMinutes() + 1);\n        }\n        else {\n            this.currentTime.setMinutes(this.currentTime.getMinutes() + 1);\n        }\n    };\n    return Time;\n}());\nexport { Time };\n","import { Time } from './Time';\nimport { ModeButton, IncreaseButton, LightButton } from \"./Button\";\nvar Watch = /** @class */ (function () {\n    function Watch() {\n        this.time = new Time();\n        this.mode = 0; // 0: normal, 1: edit hours, 2: edit minutes\n        // HTML contents \n        var content = document.getElementById('content');\n        this.watchContainer = document.createElement(\"div\");\n        this.watchContainer.classList.add(\"watch\");\n        content.appendChild(this.watchContainer);\n        // Watch Screen\n        this.watchScreen = document.createElement(\"div\");\n        this.watchScreen.classList.add(\"watch-screen\");\n        this.watchContainer.appendChild(this.watchScreen);\n        // Display Screen\n        this.timeDisplay = document.createElement(\"div\");\n        this.timeDisplay.classList.add(\"time-display\");\n        this.watchScreen.appendChild(this.timeDisplay);\n        this.isLightOn = false;\n        this.intervalId = null;\n        this.modeButton = new ModeButton(this.watchContainer, this);\n        this.increaseButton = new IncreaseButton(this.watchContainer, this);\n        this.lightButton = new LightButton(this.watchContainer, this);\n        this.startTicking();\n    }\n    Watch.prototype.startTicking = function () {\n        var _this = this;\n        if (this.intervalId !== null) {\n            clearInterval(this.intervalId);\n        }\n        this.intervalId = window.setInterval(function () {\n            if (_this.mode === 0) {\n                _this.time.tick();\n            }\n            _this.updateTime();\n        }, 1000);\n    };\n    Watch.prototype.updateTime = function () {\n        this.displayTime(this.time.getTime());\n    };\n    Watch.prototype.setMode = function (mode) {\n        this.mode = mode;\n    };\n    Watch.prototype.displayTime = function (time) {\n        var hours = this.padNumber(time.getHours(), 2);\n        var minutes = this.padNumber(time.getMinutes(), 2);\n        var seconds = this.padNumber(time.getSeconds(), 2);\n        this.timeDisplay.textContent = \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n    };\n    Watch.prototype.increaseTime = function () {\n        if (this.mode === 1) {\n            this.time.increaseHours();\n        }\n        else if (this.mode === 2) {\n            this.time.increaseMinutes();\n        }\n        this.updateTime();\n    };\n    Watch.prototype.padNumber = function (num, size) {\n        var s = num.toString();\n        while (s.length < size) {\n            s = '0' + s;\n        }\n        return s;\n    };\n    return Watch;\n}());\nexport { Watch };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import the necessary classes\nimport { Watch } from './class/Watch';\n// Create a new instance of the Watch class when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n    new Watch();\n});\n"],"names":[],"sourceRoot":""}